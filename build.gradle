plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.minhub'
version = '0.0.1-SNAPSHOT'
description = 'Printing Aggregator'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ⬇️ 개발/로컬에서만 H2 사용 (repackaged JAR에는 포함되지 않음)
    developmentOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2' // 테스트도 H2로 돌리고 싶다면 유지

    // ⬇️ 운영(및 실제 DB가 필요한 환경)에서는 Postgres 사용
    runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
